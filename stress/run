#!/bin/bash

TEST_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source $TEST_DIR/lib/clara-wrapper


function orchestrator()
{
    rm -f $2
    sleep 1

    runClara std.orchestrators.DefaultOrchestrator $1 $2 $3 $4
}


function usage()
{
    echo "Usage:"
    echo -e "\t$0 <input_file> <output_file> <num_cores> [ <num_nodes> ]"
}


PLATFORM_HOST=$(hostname -s)

if [[ $PLATFORM_HOST != "head" && $PLATFORM_HOST != "claradm" ]]; then
    echo "These scripts should run in head (UofR cluster) or claradm"
    exit 1
fi


while getopts “h” OPTION
do
    case $OPTION in
        h)
            usage; exit 0 ;;
        ?)
            echo; usage; exit 1 ;;
    esac
done

shift $((OPTIND-1))
if [[ $# -lt 3  || $# -gt 4 ]]; then
    usage
    exit 1
fi

NODES_LIST=""
NODES_FILE=$TEST_DIR/nodes

if [[ ! -f $NODES_FILE ]]; then
    echo "Run 'start' first. Could not find file with nodes list."
    exit
fi


INFILE="$1"
OUTFILE="$2"
CORES=$3
NODES=0
if [[ $# -eq 4 ]]; then
    NODES=$4
fi


if [[ ! -f "$INFILE" ]]; then
    echo "Input files doesn't exist."
    exit 1
fi

if [[ $PLATFORM_HOST == "head" ]]; then
    MAX_CORES=12
else
    MAX_CORES=32
fi
if [[ $CORES -lt 1 || $CORES -gt $MAX_CORES ]]; then
    echo "Wrong number of cores: $CORES"
    exit 1
fi

if [[ $NODES -lt 0 || $NODES -gt $(wc -l $NODES_FILE | cut -d' ' -f 1) ]]; then
    echo "Wrong number of nodes: $NODES"
    exit 1
fi


counter=0
while read NODE
do
    NODES_LIST="$NODES_LIST $NODE "
    let counter=counter+1
    if [[ $counter -eq $NODES ]]; then
        break
    fi
done < $NODES_FILE

orchestrator "$INFILE" "$OUTFILE" "$CORES" "$NODES_LIST"
