#!/bin/bash

# Run a full stress test with all the combinations of nodes and cores.
#
# Usage:
#       full-test <input_file> <out_file>

TEST_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"


PLATFORM_HOST=$(hostname -s)

if [[ $PLATFORM_HOST != "head" && $PLATFORM_HOST != "claradm" ]]; then
    echo "These scripts should run in head (UofR cluster) or claradm"
    exit 1
fi

if [[ ! $# -eq 2 ]]; then
    echo -e "Usage:"
    echo -e "\tfull-test <input_file> <output_file>"
    exit 1
fi

INFILE="$1"
OUTFILE="$2"

if [[ ! -f "$INFILE" ]]; then
    echo "Input files doesn't exist."
    exit 1
fi

if [[ $PLATFORM_HOST == "head" ]]; then
    NUM_NODES=12
    NUM_CORES=12
else
    NUM_NODES=0
    NUM_CORES=32
fi

RESULTS_FILE=results.csv

rm -rf $TEST_DIR/log-*
rm -rf $TEST_DIR/$RESULTS_FILE

for n in $(seq 0 $NUM_NODES); do
    echo "USING $n NODES..."

    $TEST_DIR/start -d $n
    sleep 5

    $TEST_DIR/deploy 1> $TEST_DIR/log/deploy 2>&1
    sleep 2

    RUN_LOG=$TEST_DIR/log/run
    $TEST_DIR/run "$INFILE" "$OUTFILE" 6 1>> $RUN_LOG 2>&1
    echo >> $RUN_LOG
    sleep 2

    for t in $(seq 1 $NUM_CORES); do
        echo "  Requesting $t threads"
        RESULT="$n;$t"
        for i in $(seq 1 3); do
            $TEST_DIR/run "$INFILE" "$OUTFILE" $t 1>> $RUN_LOG 2>&1
            sleep 2
            TIME=$(grep "Average event processing time" $RUN_LOG | tail -n 1 | awk '{ print $6 }')
            RESULT="$RESULT;$TIME"
        done
        echo $RESULT >> $TEST_DIR/$RESULTS_FILE
    done
    sleep 2

    $TEST_DIR/quit
    mv $TEST_DIR/log $TEST_DIR/log-$n
    echo >> $TEST_DIR/$RESULTS_FILE
    sleep 5
done
